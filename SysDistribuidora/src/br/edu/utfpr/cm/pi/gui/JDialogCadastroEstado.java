/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.utfpr.cm.pi.gui;

import br.edu.utfpr.cm.pi.conexao.TransactionManager;
import br.edu.utfpr.cm.pi.daos.DaoEstado;
import br.edu.utfpr.cm.pi.entidades.Estado;
import br.edu.utfpr.cm.pi.util.Util;
import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author paulo
 */
public class JDialogCadastroEstado extends javax.swing.JDialog {

    /**
     * Creates new form JDialogCadastroEstado
     */
    List<Estado> estados;

    public JDialogCadastroEstado(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        carregarTabelaComEstados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabelCodigo = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jLabelDescricao = new javax.swing.JLabel();
        jTextFieldNomeEstado = new javax.swing.JTextField();
        jLabelDescricao1 = new javax.swing.JLabel();
        jTextFieldSigla = new javax.swing.JTextField();
        jButtonSalvar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonApagar = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEstados = new javax.swing.JTable();
        jButtonEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jSeparator1.setMaximumSize(new java.awt.Dimension(665, 1));
        jSeparator1.setMinimumSize(new java.awt.Dimension(665, 1));
        jSeparator1.setPreferredSize(new java.awt.Dimension(665, 1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Cadastro de Estado");

        jLabelCodigo.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelCodigo.setText("CÃ³digo:");

        jTextFieldCodigo.setEditable(false);
        jTextFieldCodigo.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jLabelDescricao.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelDescricao.setText("Estado:");

        jTextFieldNomeEstado.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldNomeEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeEstadoActionPerformed(evt);
            }
        });

        jLabelDescricao1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelDescricao1.setText("Sigla:");

        jTextFieldSigla.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldSigla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSiglaActionPerformed(evt);
            }
        });

        jButtonSalvar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/pi/icons/save01.png"))); // NOI18N
        jButtonSalvar.setToolTipText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonLimpar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/pi/icons/clear02.png"))); // NOI18N
        jButtonLimpar.setToolTipText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButtonApagar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/pi/icons/trash.png"))); // NOI18N
        jButtonApagar.setToolTipText("Apagar");
        jButtonApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApagarActionPerformed(evt);
            }
        });

        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/pi/icons/Close.png"))); // NOI18N
        jButtonFechar.setToolTipText("Fechar");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jSeparator4.setMaximumSize(new java.awt.Dimension(665, 1));
        jSeparator4.setMinimumSize(new java.awt.Dimension(665, 1));
        jSeparator4.setPreferredSize(new java.awt.Dimension(665, 1));

        jTableEstados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableEstados);

        jButtonEditar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/pi/icons/update.png"))); // NOI18N
        jButtonEditar.setToolTipText("Atualizar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(130, 130, 130))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelDescricao)
                                .addComponent(jLabelCodigo))
                            .addComponent(jLabelDescricao1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldSigla, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                            .addComponent(jTextFieldCodigo)
                            .addComponent(jTextFieldNomeEstado)))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonEditar)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(176, 176, 176)
                    .addComponent(jButtonSalvar)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButtonLimpar)
                    .addGap(2, 2, 2)
                    .addComponent(jButtonApagar)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButtonFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(187, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCodigo)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDescricao)
                    .addComponent(jTextFieldNomeEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDescricao1)
                    .addComponent(jTextFieldSigla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEditar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(243, 243, 243)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonLimpar)
                            .addComponent(jButtonSalvar)
                            .addComponent(jButtonApagar))
                        .addComponent(jButtonFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(291, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNomeEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeEstadoActionPerformed

    private void jTextFieldSiglaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSiglaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSiglaActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        cadastrarEstado();
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        // TODO add your handling code here:
        limparFormulario();
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed

        dispose();

    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // TODO add your handling code here:
        editarEstado();
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApagarActionPerformed
        deletarEstado();
    }//GEN-LAST:event_jButtonApagarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogCadastroEstado dialog = new JDialogCadastroEstado(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApagar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelDescricao;
    private javax.swing.JLabel jLabelDescricao1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTableEstados;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldNomeEstado;
    private javax.swing.JTextField jTextFieldSigla;
    // End of variables declaration//GEN-END:variables

    private void cadastrarEstado() {
        if (validarCampos()) {
            Estado estado = new Estado();
            if (new Util().validarID(jTextFieldCodigo.getText())) {
                estado.setId(Integer.parseInt(jTextFieldCodigo.getText()));
                estado.setNome(jTextFieldNomeEstado.getText());
                estado.setSigla(jTextFieldSigla.getText());
            } else {
                estado.setNome(jTextFieldNomeEstado.getText());
                estado.setSigla(jTextFieldSigla.getText());
            }


            try {
                TransactionManager.beginTransaction();
                DaoEstado dGP = new DaoEstado();
                dGP.persist(estado);
                TransactionManager.commit();
                JOptionPane.showMessageDialog(rootPane, "Cadastrado com sucesso!");
                limparFormulario();
                carregarTabelaComEstados();
            } catch (Exception e) {
                TransactionManager.rollback();
                JOptionPane.showMessageDialog(rootPane, "O estado nÃ£o pode ser cadastrado");
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Verifique os erros antes de continuar!");
        }
    }

    private void limparFormulario() {
        jTextFieldCodigo.setText(null);
        jTextFieldNomeEstado.setText(null);
        jTextFieldNomeEstado.setBackground(Color.white);
        jTextFieldSigla.setText(null);
        jTextFieldSigla.setBackground(Color.white);
    }

    private void editarEstado() {
        int linha = jTableEstados.getSelectedRow();
        if (linha != -1) {
            Estado estado = estados.get(linha);
            preencherFormularioComDados(estado);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para editar!.");
            return;
        }
    }

    private boolean validarCampos() {
        int erros = 0;
        if (jTextFieldNomeEstado.getText() == null || jTextFieldNomeEstado.getText().equals("")) {
            jTextFieldNomeEstado.setBackground(new Color(247, 169, 157));
            erros++;
        }
        if (jTextFieldSigla.getText() == null || jTextFieldSigla.getText().equals("")) {
            jTextFieldSigla.setBackground(new Color(247, 169, 157));
            erros++;
        }
        if (erros != 0) {
            return false;
        }
        return true;
    }

    private void carregarTabelaComEstados() {
        DaoEstado dGP = new DaoEstado();
        estados = dGP.list();
        mostrarEstados(estados);
    }

    private void mostrarEstados(List<Estado> estados) {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[]{"CÃ³digo", "Estado", "Sigla"});

        if (estados != null) {
            for (Estado estado : estados) {
                model.addRow(new Object[]{estado.getId(), estado.getNome(), estado.getSigla()});
            }
            jTableEstados.setModel(model);
        }
    }

    private void preencherFormularioComDados(Estado estado) {
        jTextFieldCodigo.setText(String.valueOf(estado.getId()));
        jTextFieldNomeEstado.setText(estado.getNome());
        jTextFieldSigla.setText(estado.getSigla());
    }

    private void deletarEstado() {
        if (new Util().validarID(jTextFieldCodigo.getText())) {
            try {
                TransactionManager.beginTransaction();
                Integer id = Integer.parseInt(jTextFieldCodigo.getText());
                DaoEstado dE = new DaoEstado();
                Estado estado = dE.retrive(id);
                dE.delete(estado);
                TransactionManager.commit();
                carregarTabelaComEstados();
                limparFormulario();
                JOptionPane.showMessageDialog(rootPane, "Excluido com sucesso!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao excluir!");
                TransactionManager.rollback();
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Selecione um estado para excluir!");
        }
    }
}
