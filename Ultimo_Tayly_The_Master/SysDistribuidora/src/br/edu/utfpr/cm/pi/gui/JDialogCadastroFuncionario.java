/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.utfpr.cm.pi.gui;

import br.edu.utfpr.cm.pi.conexao.Data;
import br.edu.utfpr.cm.pi.conexao.TransactionManager;
import br.edu.utfpr.cm.pi.daos.DaoFuncionario;
import br.edu.utfpr.cm.pi.entidades.Funcionario;
import br.edu.utfpr.cm.pi.util.Util;
import java.awt.Color;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Tayly
 */
public class JDialogCadastroFuncionario extends javax.swing.JDialog {

    /**
     * Creates new form JDialogCadastroFuncionario
     */
    public JDialogCadastroFuncionario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparatorCadForn = new javax.swing.JSeparator();
        jTextFieldCodigoFuncionario = new javax.swing.JTextField();
        jLabelCadFornCodigo = new javax.swing.JLabel();
        jButtonPesquisar = new javax.swing.JButton();
        jLabelCadFornNome = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jFormattedTextFieldCPF = new javax.swing.JFormattedTextField();
        jLabelCadFornNome3 = new javax.swing.JLabel();
        jButtonSalvar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonApagar = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jSeparatorCadForn1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jSeparatorCadForn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jSeparatorCadForn.setMaximumSize(new java.awt.Dimension(750, 5));
        jSeparatorCadForn.setMinimumSize(new java.awt.Dimension(750, 5));
        jSeparatorCadForn.setPreferredSize(new java.awt.Dimension(740, 5));

        jTextFieldCodigoFuncionario.setEditable(false);
        jTextFieldCodigoFuncionario.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jLabelCadFornCodigo.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelCadFornCodigo.setText("Código:");

        jButtonPesquisar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/pi/icons/DocumentIconAd.png"))); // NOI18N
        jButtonPesquisar.setToolTipText("Pesquisar");
        jButtonPesquisar.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jLabelCadFornNome.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelCadFornNome.setText("Nome:");

        jTextFieldNome.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        try {
            jFormattedTextFieldCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabelCadFornNome3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelCadFornNome3.setText("CPF:");

        jButtonSalvar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/pi/icons/save01.png"))); // NOI18N
        jButtonSalvar.setToolTipText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonLimpar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/pi/icons/clear02.png"))); // NOI18N
        jButtonLimpar.setToolTipText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButtonApagar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/pi/icons/trash.png"))); // NOI18N
        jButtonApagar.setToolTipText("Apagar");
        jButtonApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApagarActionPerformed(evt);
            }
        });

        jButtonFechar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/pi/icons/Close.png"))); // NOI18N
        jButtonFechar.setToolTipText("Fechar");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jSeparatorCadForn1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jSeparatorCadForn1.setMaximumSize(new java.awt.Dimension(750, 5));
        jSeparatorCadForn1.setMinimumSize(new java.awt.Dimension(750, 5));
        jSeparatorCadForn1.setPreferredSize(new java.awt.Dimension(740, 5));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Cadastrar Funcionário");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparatorCadForn1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jButtonSalvar)
                        .addGap(5, 5, 5)
                        .addComponent(jButtonLimpar)
                        .addGap(5, 5, 5)
                        .addComponent(jButtonApagar)
                        .addGap(5, 5, 5)
                        .addComponent(jButtonFechar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(122, 122, 122))
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelCadFornNome)
                    .addComponent(jLabelCadFornCodigo)
                    .addComponent(jLabelCadFornNome3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldCodigoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparatorCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelCadFornCodigo)
                        .addComponent(jTextFieldCodigoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCadFornNome)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCadFornNome3)
                    .addComponent(jFormattedTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jSeparatorCadForn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonLimpar)
                    .addComponent(jButtonApagar)
                    .addComponent(jButtonFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(80, 80, 80)
                    .addComponent(jSeparatorCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(241, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        // TODO add your handling code here:
        abrirJanelaPesquisaFuncionario();
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        cadastrarFuncionario();
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        // TODO add your handling code here:
        limparFormulario();
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButtonApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApagarActionPerformed

        // TODO add your handling code here:
        deletarFuncionario();
    }//GEN-LAST:event_jButtonApagarActionPerformed

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        if (Util.imprimirConfirmacao("Deseja Sair?")) {
            dispose();
        }
    }//GEN-LAST:event_jButtonFecharActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogCadastroFuncionario dialog = new JDialogCadastroFuncionario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApagar;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JFormattedTextField jFormattedTextFieldCPF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCadFornCodigo;
    private javax.swing.JLabel jLabelCadFornNome;
    private javax.swing.JLabel jLabelCadFornNome3;
    private javax.swing.JSeparator jSeparatorCadForn;
    private javax.swing.JSeparator jSeparatorCadForn1;
    private javax.swing.JTextField jTextFieldCodigoFuncionario;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables

    private void abrirJanelaPesquisaFuncionario() {
         JDialog jd = new JDialogPesquisaFuncionario(null, true);
        jd.setLocationRelativeTo(null);
        jd.setVisible(true);
        Funcionario funcionario = (Funcionario) Data.hash.get("funcionario");
        if (funcionario == null) {
            return;
        }
        Data.hash.remove("funcionario");
        preencherFormularioComDados(funcionario);
    }

    private void cadastrarFuncionario() {
        if (validarCampos()) {
            Funcionario funcionario = new Funcionario();

            if (new Util().validarID(jTextFieldCodigoFuncionario.getText())) {
                funcionario.setId(Integer.parseInt(jTextFieldCodigoFuncionario.getText()));
                funcionario.setNome(jTextFieldNome.getText());
                funcionario.setCpf(jFormattedTextFieldCPF.getText());


            } else {
                funcionario.setNome(jTextFieldNome.getText());
                funcionario.setCpf(jFormattedTextFieldCPF.getText());
            }


            try {
                TransactionManager.beginTransaction();
                DaoFuncionario dGP = new DaoFuncionario();

                dGP.persist(funcionario);
                TransactionManager.commit();
                JOptionPane.showMessageDialog(rootPane, "Cadastrado com sucesso!");
                limparFormulario();
            } catch (Exception e) {
                TransactionManager.rollback();
                JOptionPane.showMessageDialog(rootPane, "O Funcionario não pode ser cadastrado" + e);
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Verifique os erros antes de continuar!");
        }
    }

    private void limparFormulario() {
        jTextFieldCodigoFuncionario.setText(null);
        jTextFieldNome.setText(null);
        jTextFieldNome.setBackground(Color.white);
        jFormattedTextFieldCPF.setText(null);
        jFormattedTextFieldCPF.setBackground(Color.white);
    }

    private void deletarFuncionario() {
        if (new Util().validarID(jTextFieldCodigoFuncionario.getText())) {
            try {
                TransactionManager.beginTransaction();
                Integer id = Integer.parseInt(jTextFieldCodigoFuncionario.getText());
                DaoFuncionario dE = new DaoFuncionario();
                Funcionario funcionario = dE.retrive(id);
                dE.delete(funcionario);
                TransactionManager.commit();
                limparFormulario();
                JOptionPane.showMessageDialog(rootPane, "Excluido com sucesso!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao excluir!");
                TransactionManager.rollback();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione um item para excluir!");
        }
    }

    private boolean validarCampos() {
        int erros = 0;
        if (jTextFieldNome.getText() == null || jTextFieldNome.getText().equals("")) {
            jTextFieldNome.setBackground(new Color(247, 169, 157));
            erros++;
        }
        if (!jFormattedTextFieldCPF.getText().equals("   .   .   -  ")) {
            if (!jFormattedTextFieldCPF.getText().equals("000.000.0000-00")) {
                String cpf = jFormattedTextFieldCPF.getText();
                cpf = cpf.replace(".", "");
                cpf = cpf.replace("-", "");
                if (!Util.validaCPF(cpf)) {
                    JOptionPane.showMessageDialog(rootPane, "CPF inválido!");
                    jFormattedTextFieldCPF.setBackground(new Color(247, 169, 157));
                    erros++;
                } else {
                    jFormattedTextFieldCPF.setBackground(Color.white);
                }
            } else {
                jFormattedTextFieldCPF.setBackground(Color.white);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "CPF inválido!");
            jFormattedTextFieldCPF.setBackground(new Color(247, 169, 157));
            erros++;
        }
        if (erros != 0) {
            return false;
        }
        return true;
    }

    private void preencherFormularioComDados(Funcionario funcionario) {
        jTextFieldCodigoFuncionario.setText(String.valueOf(funcionario.getId()));
        jTextFieldNome.setText(funcionario.getNome());
        jFormattedTextFieldCPF.setText(funcionario.getCpf());
    }
}
